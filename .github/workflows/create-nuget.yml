name: Create Nuget package

on:
  pull_request: #TODO: add pattern
    branches: 
      - main
  #workflow_dispatch: # TODO: replace ${{github.head_ref}} with github.ref parsing for workflow_dispatch...

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    name: Build ${{ matrix.rid }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include: # https://docs.microsoft.com/en-us/dotnet/core/rid-catalog
        - { os: windows-latest, rid: win-x64 }
        - { os: ubuntu-22.04, rid: linux-x64 }
        - { os: macos-latest, rid: osx-x64 }
    steps:
      - name: Echo branch name
        run: echo ${{github.head_ref}} 

      - name: Checkout current repo
        uses: actions/checkout@v3
        with:
          ref: ${{github.head_ref}}
          path: storage

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Test Ninja
        run: ninja --version && ls ninja-build

      - name: Checkout cpu_features.NET
        uses: actions/checkout@v3
        with:
          repository: toor1245/cpu_features.NET
          path: cpu_features.NET

      #- name: Cache CMake project
      #  id: project
      #  uses: actions/cache@v3
      #  with:
      #    path: cpu_features.NET/cmake-build-release
      #    key: project-${{ hashFiles('./cpu_features.NET/src/*') }}

      - name: Configure CMake project
        if: steps.project.outputs.cache-hit != 'true'
        run: |
          cd cpu_features.NET
          ${{ runner.os!='Windows'&&'sudo '||''}}cmake . -Bcmake-build-release -DCMAKE_BUILD_TYPE=Release ${{ runner.os=='Windows'&&'-GNinja'||''}} -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

      - name: Build CMake project
        run: ${{ runner.os!='Windows'&&'sudo '||''}}cmake --build "cpu_features.NET/cmake-build-release" --config=Release

      - name: Copy Binary
        shell: bash
        run: |
          ls ./cpu_features.NET/cmake-build-release/lib/
          mkdir -p ./storage/runtimes/${{ matrix.rid }}/native/
          cp ./cpu_features.NET/cmake-build-release/lib/cpu_features_dotnet.x64.* ./storage/runtimes/${{ matrix.rid }}/native/

      - name: Git Push
        run: |
          cd storage
          git pull
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add .
          git commit -m "Add ${{ matrix.rid }} binary"
          git push origin ${{github.head_ref}}

  nuget:
    name: Create Nuget package
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Echo branch name
        run: echo ${{github.head_ref}}

      - name: Checkout cpu_features.NET
        uses: actions/checkout@v3
        with:
          repository: toor1245/cpu_features.NET

      - name: Checkout current repo
        uses: actions/checkout@v3
        with:
          ref: ${{github.head_ref}}
          path: storage

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0

      - name: Copy native binaries
        run: cp -r storage/runtimes src/CpuFeaturesDotNet
        shell: bash

      - name: Build project
        run: dotnet build "src/CpuFeaturesDotNet/CpuFeaturesDotNet.csproj" -c Release

      - name: Pack Nuget
        run: dotnet pack -c Release -o storage/nuget
       
      - name: Upload Nuget to artifacts
        uses: actions/upload-artifact@v3.1.0
        with:
          path: storage/nuget/*.nupkg

      - name: Upload Nuget to artifacts
        uses: actions/upload-artifact@v3.1.0

      - name: Git Push
        run: |
          cd storage
          git pull
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add nuget/*.nupkg
          git commit -m "Add Nuget package"
          git push origin ${{github.head_ref}}

  test-nuget:
    name: Test Nuget
    runs-on: ubuntu-latest
    needs: nuget
    steps:
      - name: Checkout cpu_features.NET
        uses: actions/checkout@v3
        with:
          repository: toor1245/cpu_features.NET

      - name: Checkout current repo
        uses: actions/checkout@v3
        with:
          ref: ${{github.head_ref}}
          path: storage

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0
      
      - name: Restore .Net packages
        run: dotnet restore --configfile storage/NuGet.Config
      
      - name: Build project
        run: dotnet build "samples/CpuFeaturesDotNet.Samples/CpuFeaturesDotNet.Samples.csproj"

#      - name: Run samples
#        run: 
        
        
      #TODO: push nuget
#  close-pr:
#    name: Close PR
#    runs-on: ubuntu-latest
#    needs: nuget
#    steps:
#      - name: Echo action ref
#        run: echo ${{github.ref}} 
#
#      - name: Close PR
#        uses: actions/github-script@v6
#        with:
#          script: |
#            const { repo, owner } = context.repo;
#            const pr_id = process.env.GITHUB_REF.replace('refs/pull/', '').replace('/merge', '');
#            const result = await github.rest.pulls.update({
#                owner: owner,
#                repo: repo,
#                pull_number: pr_id,
#                state: 'closed'
#            });
#
    #https://octokit.github.io/rest.js/v18#pulls-update
    #octokit.rest.pulls.update({
    #  owner: ,
    #  repo: ,
    #  pull_number: ,
    #  state: 'closed'
    #});
    #https://octokit.github.io/rest.js/v18#pulls-merge
    #octokit.rest.pulls.merge({
    #  owner,
    #  repo,
    #  pull_number,
    #});
